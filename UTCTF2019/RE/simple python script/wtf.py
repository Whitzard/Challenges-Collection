flag = input("> ")
for i in range(0, len(flag), int((544+5j).imag)):
    inputs = []
    (lambda ねこ, _, __, ___, ____, _____, ネコ, q, k: getattr(ねこ, "extend")([(lambda _, __, ___: _(_, __, ___))(lambda _, __, ___:bytes([___ % __]) + _(_, __, ___ // __) if ___ else(lambda: _).__code__.co_lnotab,(_ << k),(((q << ネコ) - _____) << ((((_____ << __) - _) << ____) + _____)) + (((q << ネコ) - ((___ << __) + _)) << ((((_____ << __) - _) << ____) - q)) - (((_____ << ネコ) - _____) << (((((_ << ___) + _)) << _____) - _)) - (((q << _____) + _____) << ((((_ << ____) + _) << ____) + _____)) + (((((___ << __) - _) << _____) + _) << ((_ << k) + (_ << ___))) + (((___ << q) + _____) << ((_ << k) - (_ << _))) - (((q << ネコ) - ((___ << __) + _)) << ((((_ << ____) - _) << ____) + (_ << _))) - (((q << ____) + ___) << ((((_ << ____) - _) << ____) - (___ << _))) - ((((___ << __) + _)) << ((q << _____) + (_ << __))) + (((q << ____) + _) << ((((___ << __) + _) << ____) + q)) - (((q << ____) + ___) << ((((___ << __) + _) << ____) - (_ << _))) - (((_____ << ネコ) - q) << ((___ << ネコ) + ___)) + (((_____ << __) - _) << ((___ << ネコ) - (_ << __))) + (((___ << _____) + ___) << ((((___ << __) - _) << ____) - _)) - (((((___ << __) + _) << ____) + _____) << ((_____ << _____) + _____)) + (((((___ << __) + _) << ___) - _) << ((((_____ << __) - _) << ___) + ___)) - (((___ << ___) + _) << (((((_ << ___) + _)) << ____) + ___)) + (((___ << ネコ) + _) << ((((_ << ____) + _) << ___) - (_ << _))) - (((_ << ネコ) - _) << ((_ << q) - (_ << _))) - (((_ << q) - ___) << ((q << ____) + (_ << __))) + (((((_ << ____) + _) << __) - _) << ((q << ____) - (_ << __))) + (((_____ << _____) - ___) << ((___ << _____) + _)) - (((((___ << __) + _) << __) - _) << ((((___ << __) - _) << ___) + (_ << _))) + (((___ << ____) + _) << ((_____ << ____) + _)) + (((___ << ___) + _) << (((((_ << ___) + _)) << ___) + (_ << _))) + (((___ << ____) + _) << ((_ << ネコ) + _)) + (((q << ___) - _) << ((q << ___))) + (q << ((((___ << __) + _) << __) - _)) + (((q << __) - _) << ((_____ << ___) + _)) + (((((___ << __) + _) << __) - _) << ((_ << _____))) + (((((___ << __) + _) << __) - _) << ((___ << ___))) + (((___ << ___) + _) << (((((_ << ___) + _)) << _))) + (((q << __) - _) << ((((_ << ___) + _)))) + (((___ << ___) + _) << _))] + [ (lambda _, __, ___: _(_, __, ___))(lambda _, __, ___:bytes([___ % __]) + _(_, __, ___ // __) if ___ else(lambda: _).__code__.co_lnotab,(_ << k),(((q << _____) + _____) << ((((_____ << __) - _) << ____) + (___ << _))) - (((___ << q) - q) << ((((_____ << __) - _) << ____) - _____)) - (((___ << ____) - _) << (((((_ << ___) + _)) << _____) + (_ << _))) + (((((___ << __) + _) << ____) + _____) << ((((_ << ____) + _) << ____) + (___ << _))) + (((((_____ << __) - _) << ___) + ___) << ((((_ << ____) + _) << ____) - q)) + (((q << _____) - ___) << ((_ << k) - (_ << _))) + ((((((_ << ___) + _)) << ____) - ___) << ((((_ << ____) - _) << ____) + (_ << _))) + (((((_ << ____) + _) << ____) - ___) << ((q << _____) + (___ << _))) - (((_____ << _____) - ___) << ((q << _____) - (_ << __))) + (((((___ << __) + _) << ___) - _) << ((((___ << __) + _) << ____) + ___)) + (((((_____ << __) - _) << ____) + _____) << ((___ << ネコ) + (_ << ___))) + (((((_ << ____) + _) << ____) + _) << ((___ << ネコ) - (_ << _))) - (((((_____ << __) - _) << ____) + q) << ((((___ << __) - _) << ____) + ___)) - (((q << _____) + _____) << ((((___ << __) - _) << ____) - q)) + (((q << _____) + _) << ((_____ << _____) - (_ << _))) - (((___ << ____) - _) << ((((_____ << __) - _) << ___) - (_ << _))) + ((((((_ << ___) + _)) << ____) - ___) << ((((_ << ____) + _) << ___) + (_ << _))) - (((___ << ネコ) - _) << ((_ << q))) + (((___ << ネコ) + _____) << ((((_ << ____) - _) << ___) - (_ << _))) - (((((___ << __) + _) << __) - _) << ((q << ____) - (_ << _))) + (((_ << ____) + _) << ((((___ << __) + _) << ___) - (_ << _))) + (((((___ << __) + _) << ___) - _) << ((((___ << __) - _) << ___) + ___)) - (((___ << ___) + _) << ((_____ << ____) + ___)) + (((q << __) - _) << (((((_ << ___) + _)) << ___) + _)) + (((q << __) - _) << ((_ << ネコ) + _)) + (((((___ << __) + _) << __) + _) << ((q << ___))) + (((q << __) - _) << ((___ << ____) + _)) + ((((((_ << ___) + _)) << __) - _) << ((_____ << ___) + _)) + (((((_ << ____) + _) << __) - _) << ((_ << _____))) + (((_ << _____) + _) << ((___ << ___) + _)) + (((((___ << __) + _) << __) - _) << ((_ << ____))) + (((_ << ____) + _) << ((_____ << _))) - ((((___ << __) + _)) << ____) + _)] + [ (lambda _, __, ___: _(_, __, ___))(lambda _, __, ___:bytes([___ % __]) + _(_, __, ___ // __) if ___ else(lambda: _).__code__.co_lnotab,(_ << k),(((q << _____) - q) << ((((_____ << __) - _) << ____) + (___ << _))) + (((((___ << __) + _) << _____) + _) << ((((_____ << __) - _) << ____) - q)) - (((((___ << __) + _) << _____) - _____) << (((((_ << ___) + _)) << _____) - _)) - (((((_ << ____) - _) << ____) + q) << ((((_ << ____) + _) << ____) + (___ << _))) - (((_ << k) - ___) << ((((_ << ____) + _) << ____) - (_ << __))) + (((_____ << _____) + ___) << ((_ << k) + _)) + (((q << _____) + _____) << ((((_ << ____) - _) << ____) + (___ << _))) - (((_ << k) - ___) << ((((_ << ____) - _) << ____) - (_ << __))) + (((_____ << __) - _) << ((q << _____) + (_ << __))) + ((((((_ << ___) + _)) << _____) - q) << ((((___ << __) + _) << ____) + (___ << _))) - (((_ << ネコ) - _) << ((((___ << __) + _) << ____) - (_ << _))) - (((q << ____) - ___) << ((___ << ネコ) + (_ << __))) + ((((((_ << ___) + _)) << ___) - _) << ((___ << ネコ) - _____)) + (((q << _____) + _____) << ((((___ << __) - _) << ____) - (_ << _))) + (((((___ << __) + _) << ____) - q) << ((_____ << _____) + ___)) - (((((___ << __) - _) << __) + _) << ((_____ << _____) - (_ << __))) + (((((___ << __) + _) << ____) - q) << (((((_ << ___) + _)) << ____) - (_ << _))) + (((_____ << __) + _) << ((((_ << ____) + _) << ___) - (_ << _))) + (((((___ << __) + _) << ____) - ___) << ((((_ << ____) - _) << ___) + (_ << _))) - (((((___ << __) + _) << ___) - _) << ((q << ____) + _)) + (((((___ << __) + _) << ____) - q) << ((((___ << __) + _) << ___) - (_ << _))) + (((((___ << __) + _) << ___) - _) << ((((___ << __) - _) << ___) + ___)) + (((_____ << _____) + ___) << ((_____ << ____) + _)) + (((q << ____) - ___) << (((((_ << ___) + _)) << ___) - _)) - (((((_ << ____) - _) << __) + _) << ((_ << ネコ))) + (((q << ___) + _) << ((q << ___))) + (((((___ << __) + _) << __) + _) << ((___ << ____))) + (___ << ((((___ << __) - _) << __))) + (((((_ << ____) + _) << __) + _) << ((_ << _____))) + (((((___ << __) + _) << __) - _) << ((___ << ___))) + (((_ << _____) + _) << ((_ << ____) + _)) - ((((___ << __) + _)) << ((___ << __))) + (((_____ << __) - _) << ____) + _)] + [ (lambda _, __, ___: _(_, __, ___))(lambda _, __, ___:bytes([___ % __]) + _(_, __, ___ // __) if ___ else(lambda: _).__code__.co_lnotab,  (_ << k), (((((_ << ____) + _) << ____) + _) << ((((_____ << __) - _) << ____) + (___ << _))) - (((_ << k) - q) << ((((_____ << __) - _) << ____) - _____)) - (((((___ << __) + _) << ___) - ___) << (((((_ << ___) + _)) << _____) + _)) + (((q << _____) + _) << ((((_ << ____) + _) << ____) + (___ << _))) + (((((___ << __) + _) << _____) - (_ << ____) + _) << ((((_ << ____) + _) << ____) - (___ << _))) + (((((___ << __) + _) << ____) + _) << ((_ << k) - (_ << _))) - (((___ << q) - q) << ((((_ << ____) - _) << ____) + ___)) - (((q << ____) - _) << ((((_ << ____) - _) << ____) - (___ << _))) + (((q << _____) + _____) << ((q << _____) - (_ << _))) + (((((___ << __) + _) << ____) + _) << ((((___ << __) + _) << ____) + (_ << _))) - (((___ << _____) - ___) << ((((___ << __) + _) << ____) - q)) + (((((_ << ____) + _) << ____) + _____) << ((___ << ネコ) - (_ << _))) - (((q << _____) - ___) << ((((___ << __) - _) << ____) + (_ << __))) + (((___ << ネコ) + q) << ((((___ << __) - _) << ____) - _____)) + (((q << _____) - ___) << ((_____ << _____) - (_ << _))) + (((___ << ネコ) + q) << (((((_ << ___) + _)) << ____) + ___)) - (((((_ << ____) - _) << ____) + ___) << ((((_ << ____) + _) << ___) + (_ << _))) - (((q << ____) + ___) << ((_ << q) + (_ << _))) + (((((_ << ____) + _) << __) + _) << ((((_ << ____) - _) << ___))) + (((___ << ネコ) + _) << ((q << ____) - (_ << _))) + (((___ << ___) + _) << ((((___ << __) + _) << ___) - (_ << _))) + ((((((_ << ___) + _)) << ____) - ___) << ((((___ << __) - _) << ___) + (_ << _))) + (((((___ << __) + _) << __) + _) << ((_____ << ____))) + (((((___ << __) + _) << __) + _) << (((((_ << ___) + _)) << ___))) + (((((___ << __) + _) << __) - _) << ((_ << ネコ))) + (((((___ << __) + _) << __) - _) << ((q << ___))) + (((___ << _____) + _) << ((___ << ____) - _)) - (((_ << _____) - _) << ((_____ << ___) + _)) + (((((_ << ____) + _) << __) - _) << ((_ << _____))) + (((___ << ____) + _) << ((___ << ___))) + (___ << ((_____ << __))) + ((((___ << __) + _)) << ((_____ << _))) - (((___ << ___) + _) << ___) - (_ << _))  ] + [(lambda _, __, ___: _(_, __, ___))( lambda _, __, ___: bytes([___ % __]) + _(_, __, ___ // __) if ___ else (lambda: _).__code__.co_lnotab, (_ << k), (((((___ << __) + _) << ____) - ___) << ((((_____ << __) - _) << ____) + (___ << _))) - (((((_ << ____) - _) << ___) - ___) << ((((_____ << __) - _) << ____) - ___)) + ((((((_ << ___) + _)) << _____) - _____) << (((((_ << ___) + _)) << _____) + _)) - (((((___ << __) + _) << ____) - _____) << (((((_ << ___) + _)) << _____) - (_ << ___))) + (((((___ << __) + _) << ____) - ___) << ((((_ << ____) + _) << ____) - (_ << _))) - (((_ << k) - q) << ((_ << k) + ___)) - (((((_____ << __) + _) << ____) - _) << ((_ << k) - q)) - (((((___ << __) + _) << __) - _) << ((((_ << ____) - _) << ____) + (_ << _))) + (((((___ << __) + _) << ____) - q) << ((q << _____) + (___ << _))) - (((q << _____) - ___) << ((q << _____) - (_ << __))) + (((((_____ << __) + _) << ____) - ___) << ((((___ << __) + _) << ____) + (_ << _))) + (((((___ << __) + _) << ___) + _) << ((___ << ネコ) + q)) - (((((___ << __) + _) << ___) - _) << ((___ << ネコ) - (_ << _))) - (((((___ << __) + _) << __) - _) << ((((___ << __) - _) << ____) + (___ << _))) - (((((_ << ____) - _) << ____) + ___) << ((((___ << __) - _) << ____) - _____)) - (((((_ << ____) - _) << ___) + _) << ((_____ << _____) + ___)) + (((_____ << ___) - _) << ((((_____ << __) - _) << ___) + ___)) - (((_____ << _____) - ___) << (((((_ << ___) + _)) << ____))) + (((___ << _____) + ___) << ((((_ << ____) + _) << ___))) + (((q << _____) + _) << ((_ << q) - (_ << _))) - (((_ << ネコ) - _) << ((((_ << ____) - _) << ___) - (_ << _))) - (((___ << ネコ) - ___) << ((q << ____) - (_ << __))) + (((((___ << __) - _) << ____) + _) << ((___ << _____) + _)) - (((_____ << ___) - _) << ((((___ << __) - _) << ___) + (_ << _))) + (((___ << ___) + _) << ((_____ << ____) + _)) + (((((___ << __) + _) << ___) + ___) << (((((_ << ___) + _)) << ___) - _)) - (((((_ << ____) - _) << ___) - _) << ((_ << ネコ) - (_ << _))) - (((((___ << __) + _) << __) - _) << ((q << ___) - (_ << _))) - (((((___ << __) - _) << ___) - ___) << ((((___ << __) - _) << __) + _)) + (((___ << ___) + _) << ((_____ << ___) - (_ << _))) - (((q << __) - _) << ((((_ << ____) - _) << _))) - (((_ << ____) + _) << ((___ << ___) - _)) - (q << (((((_ << ___) + _)) << _))) + (((q << __) - _) << ((((_ << ___) + _)))) - (((___ << ___) + _) << ___) + _)]))(inputs,  *(lambda _, __, ___: _(_, __, ___))((lambda _, __, ___:[__(___[(lambda: _).__code__.co_nlocals])] +_(_, __, ___[(lambda _: _).__code__.co_nlocals:]) if ___ else []),lambda _: _.__code__.co_argcount,(lambda _: _,lambda _, __: _,lambda _, __, ___: _,lambda _, __, ___, ____: _,lambda _, __, ___, ____, _____: _,lambda _, __, ___, ____, _____, ______: _,lambda _, __, ___, ____, _____, ______, _______: _,lambda _, __, ___, ____, _____, ______, _______, ________: _)))
    temp = getattr(__import__("ha"+"".__class__.__name__[0]+"hl"+(3).__class__.__name__[0]+b'44'.__class__.__name__[0]), "n"+(3j).__class__.__name__[-2]+"w")((lambda _, __, ___, ____, _____, ネコ, q, k:  getattr(_.__class__.__name__[_] + chr(((((___ << __) + _)) << ___) + (_ << _)) + ____.__class__.__name__[-_] + str(_), (lambda _, __, ___: _(_, __, ___))(  lambda _, __, ___:  bytes([___ % __]) + _(_, __, ___ // __) if ___ else  (lambda: _).__code__.co_lnotab,  (_ << k), (((((___ << __) + _) << ___) - ___) << ((_ << ネコ))) + (((q << __) + _) << ((q << ___) + (_ << _))) + (((___ << _____) + _) << ((___ << ____))) + (((q << __) - _) << ((_____ << ___) + (_ << _))) + (((q << __) + _) << ((_ << _____) + (_ << _))) - (((((_ << ___) + _))) << ((q << __))) - ((((___ << __) + _)) << ((_____ << __) + _)) + (((___ << ___) - _) << ((___ << __))) + (_____ << q) - (___ << __)).decode("utf-8"))  (getattr([].__class__.__name__[__]   + ().__class__.__eq__.__class__.__name__[-___]   + ().__iter__().__class__.__name__[-1],   (__+3j).__class__.__name__[__]+(4.2).__class__.__name__[___]+"k" + chr((((___ << ___) + _) << __) + _) + (3.7).__class__.__name__[-_] + "ran" + "".__class__.__name__[0])(  (lambda _, __, ___: _(_, __, ___))(  lambda _, __, ___:  bytes([___ % __]) + _(_, __, ___ // __) if ___ else  (lambda: _).__code__.co_lnotab,  (_ << k),  (((((___ << __) + _) << ____) - ___) << ((___ << ネコ) - _)) - (((___ << ____) - _) << ((((___ << __) - _) << ____) + q)) - (((((___ << __) + _) << ____) + ___) << ((((___ << __) - _) << ____) - _____)) + (((___ << ネコ) - _____) << ((_____ << _____) + _)) - ((((((_ << ___) + _)) << _____) - _____) << ((((_____ << __) - _) << ___) - _)) - (((___ << ネコ) + _____) << (((((_ << ___) + _)) << ____) - ___)) + (((q << _____) + q) << ((_ << q) + (_ << __))) + ((((((_ << ___) + _)) << ____) - _) << ((((_ << ____) - _) << ___) + ___)) + (((((_____ << __) - _) << ___) + _) << ((q << ____) + (_ << _))) - (((((___ << __) + _) << ____) - ___) << ((((___ << __) + _) << ___) + _) ) - ((((((_ << ___) + _)) << ____) + ___) << ((___ << _____))) + (((q << ____) - _) << ((((___ << __) - _) << ___))) + (((((___ << __) + _) << ___) + ___) << ((_____ << ____))) + (((_ << ____) - _) << (((((_ << ___) + _)) << ___) + ___)) + (((((___ << __) + _) << __) + _) << ((_ << ネコ) + _)) + (((___ << _____) + _) << ((q << ___))) + (((((_ << ____) - _) << __) - _) << ((___ << ____) + _)) + (((q << ___) + _) << ((_____ << ___) + _)) - (((_ << ____) + _) << (((((_ << ___) + _)) << __) - _)) - ((((((_ << ___) + _)) << __) - _) << ((((___ << __) + _) << _))) - (((((_ << ___) + _))) << ((_____ << __))) + (((q << __) - _) << ((_____ << _))) + (((___ << ___) + _) << __)  ).decode("utf-8"),  (lambda _, __, ___: _(_, __, ___))(  lambda _, __, ___:  bytes([___ % __]) + _(_, __, ___ // __) if ___ else  (lambda: _).__code__.co_lnotab,  (_ << k),  (((q << _____) - ___) << ((___ << ネコ) - _)) - (((_ << k) - q) << ((((___ << __) - _) << ____) + (_ << __))) + (((((_____ << __) - _) << ____) + q) << ((((___ << __) - _) << ____) - q)) - (((_____ << ___) - _) << ((_____ << _____) + (_ << _))) + (((((_ << ____) - _) << ____) + _) << ((((_____ << __) - _) << ___) - _)) - (((((___ << __) - _) << ___) + _) << (((((_ << ___) + _)) << ____) - (_ << __))) + (((q << __) - _) << ((((_ << ____) + _) << ___) - ___)) + (((___ << ネコ) - _____) << ((((_ << ____) - _) << ___) + _)) - ((((((_ << ___) + _)) << ___) + ___) << ((q << ____) + _)) + (((((___ << __) + _) << ___) - _) << ((((___ << __) + _) << ___))) +  (((((___ << __) + _) << __) - _) << ((___ << _____) + _)) + (((___ << ____) + _) << ((((___ << __) - _) << ___) + _)) + (((q << ____) + _) << ((_____ << ____))) + (((___ << _____) + ___) << (((((_ << ___) + _)) << ___))) + ((((___ << __) + _)) << ((((_ << ____) + _) << __) - _)) + (((((_ << ____) - _) << ___) - _) << ((q << ___))) + (q <<  ((((___ << __) + _) << __))) - ((((((_ << ___) + _)) << ___) + ___) << ((_____ << ___) + _)) - ((((((_ << ___) + _)) << __) - _) << ((_ << _____) + (_ << _))) + (((((___ << __) + _) << __) - _) << ((___ << ___) + _)) - ((((((_ << ___) + _)) << __) + _) << (((((_ << ___) + _)) << _))) - ((((((_ << ___) + _)) << __) + _) << ((_____ << _))) + (((_ << ____) - _) << ___) + _).decode("utf-8")  )))(*(lambda _, __, ___: _(_, __, ___))(  (lambda _, __, ___:   [__(___[(lambda: _).__code__.co_nlocals])] +   _(_, __, ___[   (lambda _: _).__code__.co_nlocals:]) if ___ else []   ),  lambda _: _.__code__.co_argcount,  (  lambda _: _,  lambda _, __: _,  lambda _, __, ___: _,  lambda _, __, ___, ____: _,  lambda _, __, ___, ____, _____: _,  lambda _, __, ___, ____, _____, ネコ: _,  lambda _, __, ___, ____, _____, ネコ, q: _,  lambda _, __, ___, ____, _____, ネコ, q, k: _  )  )))
    getattr(temp, "update")(getattr(flag[i:i + 5], "encode")("utf-8"))
    if getattr(__import__("difflib"), "SequenceMatcher")(None, getattr(getattr(temp, "hexdigest")(), "lower")(), getattr(inputs[i // 5], "decode")("utf-8").lower()).ratio() != 1.0:
        exit()

print("correct")
